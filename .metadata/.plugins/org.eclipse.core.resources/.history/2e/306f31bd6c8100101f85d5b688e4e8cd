package com.courses.controller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.coruses.model.Student;

public class Studentdb {

    public static List<Student> getAllStudents() {
        List<Student> list = new ArrayList<>();
        String selectQuery = "SELECT s.*, c.course_list FROM students s JOIN courses c ON s.id=c.student_id";
        try (Connection connection = DBConnection.getConnection();
             Statement stmt = connection.createStatement();
             ResultSet rs = stmt.executeQuery(selectQuery)) {
            
            while (rs.next()) {
                Student student = new Student();
                student.setId(rs.getInt("id"));
                student.setName(rs.getString("name"));
                student.setEmail(rs.getString("email"));
                student.setJoinDate(rs.getDate("join_date"));
                student.setFeesPaid(rs.getDouble("fees_paid"));
                student.setCourseList(rs.getString("course_list"));
                list.add(student);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }

    public static Student getStudentByUsername(String username) {
        String selectQuery = "SELECT s.*, c.course_list FROM students s JOIN courses c ON s.id=c.student_id WHERE LOWER(s.name)=?";
        try (Connection connection = DBConnection.getConnection();
             PreparedStatement ps = connection.prepareStatement(selectQuery)) {

            ps.setString(1, username.toLowerCase());
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    Student student = new Student();
                    student.setId(rs.getInt("id"));
                    student.setName(rs.getString("name"));
                    student.setEmail(rs.getString("email"));
                    student.setJoinDate(rs.getDate("join_date"));
                    student.setFeesPaid(rs.getDouble("fees_paid"));
                    student.setCourseList(rs.getString("course_list"));
                    return student;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
}
